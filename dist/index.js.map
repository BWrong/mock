{"version":3,"sources":["webpack://mockTool/./src/index.js","webpack://mockTool/./src|sync","webpack://mockTool/external \"Mock\"","webpack://mockTool/external \"bodyParser\"","webpack://mockTool/external \"chalk\"","webpack://mockTool/external \"chokidar\"","webpack://mockTool/external \"glob\"","webpack://mockTool/external \"path\"","webpack://mockTool/webpack/bootstrap","webpack://mockTool/webpack/startup","webpack://mockTool/webpack/runtime/hasOwnProperty shorthand"],"names":["resolve","require","Mock","glob","chokidar","chalk","bodyParser","setHeaders","headers","res","Object","keys","forEach","key","setHeader","genarRoutes","watchFiles","app","prefix","lastIndex","mockData","reduce","temp","file","fileData","push","routerOne","method","url","trim","replace","req","next","data","result","mock","getMockData","response","json","_router","stack","length","mockRoutesLength","mockStartIndex","sleep","delay","Promise","setTimeout","clearCache","modulePath","e","module","main","children","splice","indexOf","exports","mockFolder","options","console","log","red","watchOptions","pattern","debug","sync","getWatchFiles","use","urlencoded","extended","get","header","watch","on","event","path","green","process","cwd","ex","error","webpackEmptyContext","Error","code","id","__webpack_module_cache__","__webpack_require__","moduleId","loaded","__webpack_modules__","c","o","obj","prop","prototype","hasOwnProperty","call"],"mappings":"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","file":"index.js","sourcesContent":["const { resolve } = require('path');\nconst Mock = require('mockjs');\nconst glob = require('glob');\nconst chokidar = require('chokidar');\nconst chalk = require('chalk');\nconst bodyParser = require('body-parser');\n\nlet mockServer = (app, mockFolder, options) => {\n  // 判断是否设置监听目录\n  if (!mockFolder) {\n    return console.log(chalk.red('[@bwrong/mock] Please set mockFolder'));\n  }\n  // 获取配置\n  const delay = options.delay || 0;\n  const watchOptions = options.watchOptions || {};\n  const headers = options.headers || {};\n  const prefix = options.prefix || '';\n  const pattern = options.pattern || '**/[^_]*.js'\n  const debug = options.debug || false\n  // 获取监听文件\n  const watchFiles = getWatchFiles(mockFolder, pattern);\n  // 解析body\n  app.use(bodyParser.json());\n  app.use(\n    bodyParser.urlencoded({\n      extended: true\n    })\n  );\n  // 设置header\n  app.use((req, res, next) => {\n    let globalHeaders = {\n      'Access-Control-Allow-Origin': req.get('Origin') || '*',\n      'Access-Control-Allow-Methods': 'POST, GET, PATCH, OPTIONS, PUT, DELETE',\n      'Access-Control-Allow-Headers': 'Content-Type, X-Requested-With,' + (req.header('access-control-request-headers') || ''),\n      'Access-Control-Allow-Credentials': 'true',\n      ...headers\n    };\n    setHeaders(globalHeaders,res)\n    next();\n  });\n  // 延迟响应\n  app.use(async (req, res, next) => {\n    await sleep(delay);\n    next();\n  });\n  // 注册路由\n  let { mockRoutesLength, mockStartIndex } = genarRoutes(watchFiles, app, prefix);\n  // 监听\n  const watcher = chokidar.watch(mockFolder, watchOptions);\n  watcher.on('all', (event, path) => {\n    if (event === 'change' || event === 'add') {\n      try {\n        // 移除路由\n        app._router.stack.splice(mockStartIndex, mockRoutesLength);\n        // 移除模块\n        clearCache(path);\n        watchFiles.forEach(file => clearCache(file));\n        // 重新注册路由\n        ({mockRoutesLength,mockStartIndex} = genarRoutes(watchFiles,app,prefix));\n        debug && console.log(`${chalk.green('[@bwrong/mock]')} ${chalk.green(path.replace(process.cwd(), ''))} load success！`);\n      } catch (ex) {\n        console.error(ex);\n        console.error(`${chalk.red('[@bwrong/mock]')} ${chalk.red(path.replace(process.cwd(), ''))} load filed！`);\n      }\n    }\n  });\n  return (req, res, next) => {\n    next();\n  };\n};\n/**\n * 设置headers\n * @param {*} headers\n * @param {*} res\n */\nfunction setHeaders(headers = {},res) {\n  Object.keys(headers).forEach((key) => res.setHeader(key, headers[key]));\n}\n/**\n * 获取监听文件\n * @param {*} mockFolder\n * @param {*} pattern\n */\nfunction getWatchFiles(mockFolder, pattern) {\n  return glob.sync(resolve(mockFolder, pattern));\n}\n/**\n * 创建路由\n * @param {*} watchFiles\n * @param {*} app\n * @param {*} prefix\n */\nfunction genarRoutes(watchFiles, app, prefix) {\n  let lastIndex;\n  // 获取mock数据集合\n  let mockData = watchFiles.reduce((temp, file) => {\n    let fileData = require(file) || [];\n    temp.push(...fileData);\n    return temp;\n  }, []);\n  // 将mock数据注册为路由\n  for (const routerOne of mockData) {\n    let method = routerOne.method || 'get';\n    let url = routerOne.url.trim().replace(/^\\//, '');\n    app[method](`${prefix}/${url}`, (req, res, next) => {\n      // 设置当前路由的headers\n      setHeaders(routerOne.headers,res)\n      let data = getMockData(routerOne.response, req, res);\n      res.json(data);\n      next();\n    });\n    lastIndex = app._router.stack.length;\n  }\n  const mockRoutesLength = Object.keys(mockData).length;\n  return {\n    mockRoutesLength,\n    mockStartIndex: lastIndex - mockRoutesLength\n  };\n}\n\n/**\n * 生成mock数据\n * @param {*} result\n * @param {*} req\n * @param {*} res\n */\nfunction getMockData(result, req, res) {\n  return Mock.mock(typeof result === 'function' ? result(req) : result);\n}\n/**\n * 延迟\n * @param {*} delay\n */\nfunction sleep(delay) {\n  return new Promise((resolve) => setTimeout(resolve, delay));\n}\n/**\n * 清除模块\n * @param {*} modulePath\n */\nfunction clearCache(modulePath) {\n  try {\n    modulePath = require.resolve(modulePath);\n  } catch (e) {}\n  let module = require.cache[modulePath];\n  if (!module) return;\n  if (module.main) {\n    module.main.children.splice(module.main.children.indexOf(module), 1);\n  }\n  delete require.cache[require.resolve(modulePath)];\n}\nmodule.exports = mockServer","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => [];\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 875;\nmodule.exports = webpackEmptyContext;","module.exports = require(\"Mock\");;","module.exports = require(\"bodyParser\");;","module.exports = require(\"chalk\");;","module.exports = require(\"chokidar\");;","module.exports = require(\"glob\");;","module.exports = require(\"path\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n","// module cache are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(579);\n","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}